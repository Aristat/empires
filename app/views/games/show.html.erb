<div class="container-fluid mt-4">
  <!-- Top Bar with Key Information -->
  <div class="card mb-4">
    <div class="card-body">
      <div class="col-md-12">
        <h5>Game #<%= @game.id %> - <%= @user_game.civilization.name %></h5>
        <p class="mb-0">
          <%= Date::MONTHNAMES[@month] %> <%= @year %>
          <%= season(@month) %>
        </p>
        <p class="mb-0">
          <%= @user_game.current_turns %> turns remaining,
          <% if @user_game.current_turns >= @game.max_turns %>
            maximum turns stored
          <% else %>
            next free turn in <%= @next_turn_seconds / 60 %> minutes and <%= @next_turn_seconds % 60 %> seconds
          <% end %>
        </p>
        <button onclick="endTurn()" class="btn btn-primary mt-2">End Turn</button>
      </div>
    </div>
  </div>

  <% if @user_game.last_message.present? %>
    <div class="card mb-4">
      <div class="card-body">
        <h5 class="card-title">Last Turn Events</h5>
        <div class="card-text">
          <% @user_game.last_message.each do |message| %>
            <p class="mb-1 text-<%= message['color'] || 'dark' %>">
              <%= message['text'] %>
            </p>
          <% end %>
        </div>
      </div>
    </div>
  <% end %>

  <div class="card mb-4">
    <div class="card-body">
      <div class="row">
        <div class="col-md-12">
          <!-- Summary Row -->
          <div class="row mb-4">
            <div class="col-md-12">
              <div class="d-flex justify-content-between align-items-center p-3 bg-light rounded">
                <div class="d-flex align-items-center">
                  <h5 class="mb-0 me-3">Score: <%= number_with_delimiter(@user_game.score) %></h5>
                </div>
                <div class="d-flex align-items-center">
                  <h5 class="mb-0 me-3">Population: <%= number_with_delimiter(@user_game.people) %></h5>
                </div>
                <div class="d-flex align-items-center">
                  <h5 class="mb-0">Gold: <%= number_with_delimiter(@user_game.gold) %></h5>
                </div>
              </div>
            </div>
          </div>
          <!-- End Summary Row -->
          <div class="row">
            <div class="col-md-4">
              <h6>Land</h6>
              <table class="table table-bordered">
                <tbody>
                  <tr style="background-color: #663333; color: white;">
                    <th scope="row">Total:</th>
                    <td class="text-end">
                      <img src="<%= asset_path('mland.gif') %>" alt="Total Mountain Land" class="align-middle" style="margin-right: 5px;">
                      <%= number_with_delimiter(@user_game.m_land) %>
                    </td>
                    <td style="width: 10px;"></td>
                    <td class="text-end">
                      <img src="<%= asset_path('fland.gif') %>" alt="Total Forest Land" class="align-middle" style="margin-right: 5px;">
                      <%= number_with_delimiter(@user_game.f_land) %>
                    </td>
                    <td style="width: 10px;"></td>
                    <td class="text-end">
                      <img src="<%= asset_path('pland.gif') %>" alt="Total Plains Land" class="align-middle" style="margin-right: 5px;">
                      <%= number_with_delimiter(@user_game.p_land) %>
                    </td>
                  </tr>
                  <tr style="background-color: #336633; color: white;">
                    <th scope="row">Free:</th>
                    <td class="text-end">
                      <img src="<%= asset_path('mland_free.gif') %>" alt="Free Mountain Land" class="align-middle" style="margin-right: 5px;">
                      <%= number_with_delimiter(@data[:user_data][:free_mountains]) %>
                    </td>
                    <td style="width: 10px;"></td>
                    <td class="text-end">
                      <img src="<%= asset_path('fland_free.gif') %>" alt="Free Forest Land" class="align-middle" style="margin-right: 5px;">
                      <%= number_with_delimiter(@data[:user_data][:free_forest]) %>
                    </td>
                    <td style="width: 10px;"></td>
                    <td class="text-end">
                      <img src="<%= asset_path('pland_free.gif') %>" alt="Free Plains Land" class="align-middle" style="margin-right: 5px;">
                      <%= number_with_delimiter(@data[:user_data][:free_plains]) %>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div class="col-md-8">
              <h6>Resources</h6>
              <ul class="list-group list-group-horizontal">
                <li class="list-group-item d-flex justify-content-between">
                  <span>Wood:</span>
                  <span><%= @user_game.wood %></span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                  <span>Food:</span>
                  <span><%= @user_game.food %></span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                  <span>Iron:</span>
                  <span><%= @user_game.iron %></span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                  <span>Tools:</span>
                  <span><%= @user_game.tools %></span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                  <span>Wine:</span>
                  <span><%= @user_game.wine %></span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                  <span>Horses:</span>
                  <span><%= @user_game.horses %></span>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Tab Navigation -->
  <ul class="nav nav-tabs mb-4" id="gameTabs" role="tablist">
    <li class="nav-item" role="presentation">
      <button class="nav-link" id="builders-tab" data-bs-toggle="tab" data-bs-target="#builders" type="button" role="tab" aria-controls="builders" aria-selected="false">
        Builders
      </button>
    </li>
    <li class="nav-item" role="presentation">
      <button class="nav-link" id="units-tab" data-bs-toggle="tab" data-bs-target="#units" type="button" role="tab" aria-controls="units" aria-selected="false">
        Units
      </button>
    </li>
    <li class="nav-item" role="presentation">
      <button class="nav-link" id="management-tab" data-bs-toggle="tab" data-bs-target="#management" type="button" role="tab" aria-controls="management" aria-selected="false">
        Management
      </button>
    </li>
  </ul>

  <!-- Tab Content -->
  <div class="tab-content" id="gameTabsContent">
    <!-- Builders Tab -->
    <div class="tab-pane fade" id="builders" role="tabpanel" aria-labelledby="builders-tab">
      <%= render 'builders', user_game: @user_game %>
    </div>

    <!-- Units Tab -->
    <div class="tab-pane fade" id="units" role="tabpanel" aria-labelledby="units-tab">
      <%= render 'units', user_game: @user_game %>
    </div>

    <!-- Management Tab -->
    <div class="tab-pane fade" id="management" role="tabpanel" aria-labelledby="management-tab">
      <%= render 'management', user_game: @user_game %>
    </div>
  </div>

  <%= link_to 'Back to Games', root_path, class: 'btn btn-secondary mt-3' %>
</div>

<!-- Add Bootstrap JavaScript and dependencies -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>

<script>
// Set initial active tab before Bootstrap initializes
(function initializeActiveTab() {
  const savedTab = localStorage.getItem('activeTab') || 'builders-tab';
  const tabToActivate = document.getElementById(savedTab);
  const paneToActivate = document.getElementById(savedTab.replace('-tab', ''));
  
  if (tabToActivate && paneToActivate) {
    tabToActivate.classList.add('active');
    tabToActivate.setAttribute('aria-selected', 'true');
    paneToActivate.classList.add('show', 'active');
  }
})();

function endTurn() {
  fetch('<%= end_turn_user_game_path(@game) %>', {
    method: 'POST',
    headers: {
      'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
    }
  })
  .then(response => {
    if (response.ok) {
      window.location.reload();
    }
  });
}

// Building calculation
function showBuild() {
  const buildingSelect = document.getElementById('buildingSelect');
  if (!buildingSelect || buildingSelect.selectedIndex === 0) return 0;

  const queueType = document.querySelector('select[name="queue_type"]').value;
  if (queueType === 'demolish') {
    const allowBuild = document.getElementById('allowBuild');
    if (allowBuild) {
      allowBuild.textContent = '';
    }
    return 0;
  }

  const selectedOption = buildingSelect.options[buildingSelect.selectedIndex];
  const freeMLand = <%= @data[:user_data][:free_mountains] %>;
  const freeFLand = <%= @data[:user_data][:free_forest] %>;
  const freePLand = <%= @data[:user_data][:free_plains] %>;
  const gold = <%= @user_game.gold %>;
  const iron = <%= @user_game.iron %>;
  const wood = <%= @user_game.wood %>;

  let canBuild = Number.MAX_VALUE;
  let temp = 0;

  if (selectedOption.dataset.gold > 0) {
    temp = Math.floor(gold / selectedOption.dataset.gold);
    if (temp < canBuild) canBuild = temp;
  }
  if (selectedOption.dataset.iron > 0) {
    temp = Math.floor(iron / selectedOption.dataset.iron);
    if (temp < canBuild) canBuild = temp;
  }
  if (selectedOption.dataset.wood > 0) {
    temp = Math.floor(wood / selectedOption.dataset.wood);
    if (temp < canBuild) canBuild = temp;
  }

  const land = selectedOption.dataset.land;
  const squares = selectedOption.dataset.squares;
  if (land === 'P') {
    temp = Math.floor(freePLand / squares);
    if (temp < canBuild) canBuild = temp;
  }
  if (land === 'M') {
    temp = Math.floor(freeMLand / squares);
    if (temp < canBuild) canBuild = temp;
  }
  if (land === 'F') {
    temp = Math.floor(freeFLand / squares);
    if (temp < canBuild) canBuild = temp;
  }

  const allowBuild = document.getElementById('allowBuild');
  if (allowBuild) {
    allowBuild.textContent = `Your resources allow you to build ${canBuild} ${selectedOption.text.split(' (')[0]}`;
  }

  return canBuild;
}

// Add event listener for building selection
document.addEventListener('DOMContentLoaded', function() {
  const buildingSelect = document.getElementById('buildingSelect');
  if (buildingSelect) {
    buildingSelect.addEventListener('change', showBuild);
  }

  const buildingQueueTypeSelect = document.getElementById('buildingQueueType');
  if (buildingQueueTypeSelect) {
    buildingQueueTypeSelect.addEventListener('change', showBuild);
  }

  const maxButton = document.getElementById('maxButton');
  if (maxButton) {
    maxButton.addEventListener('click', function() {
      const maxValue = showBuild();
      if (maxValue > 0) {
        document.querySelector('input[name="qty"]').value = maxValue;
      }
    });
  }

  const gameTabs = document.getElementById('gameTabs');
  
  // Listen for tab changes
  gameTabs.addEventListener('shown.bs.tab', function(event) {
    localStorage.setItem('activeTab', event.target.id);
  });
});
</script>
